<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>贪吃蛇</title>
      <link href="/2022/09/07/%E8%B4%AA%E5%90%83%E8%9B%87/"/>
      <url>/2022/09/07/%E8%B4%AA%E5%90%83%E8%9B%87/</url>
      
        <content type="html"><![CDATA[<h2 id="js写贪吃蛇-整个文件我都传到我的github里面了-可以直接访问-x3D-gt-https-github-com-itwufeng-snake"><a href="#js写贪吃蛇-整个文件我都传到我的github里面了-可以直接访问-x3D-gt-https-github-com-itwufeng-snake" class="headerlink" title="js写贪吃蛇  整个文件我都传到我的github里面了 可以直接访问&#x3D;&gt; https://github.com/itwufeng/snake"></a>js写贪吃蛇  整个文件我都传到我的github里面了 可以直接访问&#x3D;&gt; <a href="https://github.com/itwufeng/snake">https://github.com/itwufeng/snake</a></h2><h2 id="利用-html-和-css-还有-js-来写贪吃蛇这个小游戏"><a href="#利用-html-和-css-还有-js-来写贪吃蛇这个小游戏" class="headerlink" title="利用 html 和 css 还有 js 来写贪吃蛇这个小游戏"></a>利用 html 和 css 还有 js 来写贪吃蛇这个小游戏</h2><h2 id="html-里面主要是定义一些元素"><a href="#html-里面主要是定义一些元素" class="headerlink" title="html 里面主要是定义一些元素"></a>html 里面主要是定义一些元素</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>贪吃蛇<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn startBtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn pauseBtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>snakeWrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>js/index.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="css-里面来设置-蛇头的样子-蛇身的样子-颜色-和格子-还有-食物-的大小-宽高"><a href="#css-里面来设置-蛇头的样子-蛇身的样子-颜色-和格子-还有-食物-的大小-宽高" class="headerlink" title="css 里面来设置 蛇头的样子 蛇身的样子 颜色 和格子 还有 食物 的大小 宽高"></a>css 里面来设置 蛇头的样子 蛇身的样子 颜色 和格子 还有 食物 的大小 宽高</h2><pre class=" language-css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">{</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.content</span></span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">640</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">640</span>px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">100</span>px auto<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.btn</span></span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">80</span>, <span class="token number">171</span>, <span class="token number">137</span>, <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.btn</span> button</span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">100%</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.startBtn</span> button</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">150</span>px<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(../images/start.webp)</span> <span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">100%</span> <span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">75</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.pauseBtn</span></span><span class="token punctuation">{</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.pauseBtn</span> button</span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">70</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">70</span>px<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(../images/pause.webp)</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">35</span>px<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -<span class="token number">35</span>px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#snakeWrap</span></span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#225675</span><span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">20</span>px solid <span class="token hexcode">#7dd9ff</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.snakeHead</span></span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(../images/head.webp)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">40%</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.snakeBody</span></span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(../images/body.webp)</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.food</span></span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(../images/appel.webp)</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="重点是-js-来规定整个贪吃蛇游戏的运行，包括-蛇的移动-和键盘绑定敲击事件-上下左右-以及食物的随机生成"><a href="#重点是-js-来规定整个贪吃蛇游戏的运行，包括-蛇的移动-和键盘绑定敲击事件-上下左右-以及食物的随机生成" class="headerlink" title="重点是 js  来规定整个贪吃蛇游戏的运行，包括 蛇的移动 和键盘绑定敲击事件 上下左右 以及食物的随机生成"></a>重点是 js  来规定整个贪吃蛇游戏的运行，包括 蛇的移动 和键盘绑定敲击事件 上下左右 以及食物的随机生成</h2><h2 id="具体可见代码中的注解-都写得很详细"><a href="#具体可见代码中的注解-都写得很详细" class="headerlink" title="具体可见代码中的注解 都写得很详细"></a>具体可见代码中的注解 都写得很详细</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> sw<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//方块宽</span>    sh<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//高</span>    tr<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//行</span>    td<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//列</span><span class="token keyword">var</span> snake <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//蛇的实例</span><span class="token keyword">var</span> food<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//食物的实例</span><span class="token keyword">var</span> game <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//游戏实例</span><span class="token keyword">function</span> <span class="token function">Square</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>classname<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 0  0   0  0</span>    <span class="token comment" spellcheck="true">// 20 0   1  0</span>    <span class="token comment" spellcheck="true">// 40 0   2  0</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token operator">*</span>sw<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token operator">*</span>sh<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token operator">=</span>classname<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>viewContent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 方块对应的dom元素</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>viewContent<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'snakeWrap'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//方块的父级</span><span class="token punctuation">}</span>Square<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>create <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token comment" spellcheck="true">//创建方块dom 并添加到dom里</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>viewContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'absolute'</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>viewContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> sw <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>viewContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> sh <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>viewContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>viewContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>viewContent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>Square<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>remove <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>viewContent<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 蛇</span><span class="token keyword">function</span> <span class="token function">Snake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 存蛇头信息</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 存蛇尾信息</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// 存蛇身每一个方块的位置</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>directionNum <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 存蛇走的方向，用对象表示</span>        left<span class="token punctuation">:</span><span class="token punctuation">{</span>            x<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>            y<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>            rotate<span class="token punctuation">:</span><span class="token number">180</span> <span class="token comment" spellcheck="true">//蛇头在不同方向应该进行旋转</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        right<span class="token punctuation">:</span><span class="token punctuation">{</span>            x<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>            y<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>            rotate<span class="token punctuation">:</span><span class="token number">0</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        up<span class="token punctuation">:</span><span class="token punctuation">{</span>            x<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>            y<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>            rotate<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">90</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        down<span class="token punctuation">:</span><span class="token punctuation">{</span>            x<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>            y<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>            rotate<span class="token punctuation">:</span><span class="token number">90</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span>Snake<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>init <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 创建蛇头</span>    <span class="token keyword">var</span> snakeHead <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Square</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'snakeHead'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    snakeHead<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> snakeHead<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//存蛇头信息</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">// 存蛇头位置</span>    <span class="token comment" spellcheck="true">// 创建蛇身体1</span>    <span class="token keyword">var</span> snakeBody1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Square</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'snakeBody'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    snakeBody1<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 创建蛇身体2</span>    <span class="token keyword">var</span> snakeBody2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Square</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">'snakeBody'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       snakeBody2<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> snakeBody2<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 把蛇尾信息存起来</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 形成链表关系</span>    snakeHead<span class="token punctuation">.</span>last <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    snakeHead<span class="token punctuation">.</span>next <span class="token operator">=</span> snakeBody1<span class="token punctuation">;</span>    snakeBody1<span class="token punctuation">.</span>last <span class="token operator">=</span> snakeHead<span class="token punctuation">;</span>    snakeBody2<span class="token punctuation">.</span>next <span class="token operator">=</span> snakeBody2<span class="token punctuation">;</span>    snakeBody2<span class="token punctuation">.</span>last <span class="token operator">=</span> snakeBody1<span class="token punctuation">;</span>    snakeBody2<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//  给蛇添加一个默认属性，用来表示蛇走的方向</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>direction <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>right<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//这个方法用来获取蛇头下个位置对应元素，要根据元素做不同的事情</span>Snake<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>getNextPos <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> nextPos <span class="token operator">=</span> <span class="token punctuation">[</span>      <span class="token comment" spellcheck="true">// 蛇头要走的下一个点的坐标</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>x <span class="token operator">/</span> sw <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction<span class="token punctuation">.</span>x <span class="token punctuation">,</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>y <span class="token operator">/</span> sh <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction<span class="token punctuation">.</span>y    <span class="token punctuation">]</span>    <span class="token comment" spellcheck="true">// 下个点是自己，代表撞到了自己，游戏结束</span>    <span class="token keyword">var</span> selfCollied <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//是否撞到自己</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> nextPos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> nextPos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 如果数组中两数据相等，下个点在蛇身体里能找到 ，撞到自己</span>            selfCollied <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>selfCollied<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>strategies<span class="token punctuation">.</span><span class="token function">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 下个点是墙，代表撞到墙，游戏结束</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>nextPos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> nextPos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> nextPos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">></span> td<span class="token number">-1</span> <span class="token operator">||</span> nextPos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span>tr<span class="token number">-1</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>strategies<span class="token punctuation">.</span><span class="token function">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 下个点是苹果，吃掉，</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>food <span class="token operator">&amp;&amp;</span> food<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> nextPos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> food<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> nextPos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//如果这个条件成功，说明蛇头下一个位置是食物</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>strategies<span class="token punctuation">.</span>eat<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 下个点什么都不是，走</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>strategies<span class="token punctuation">.</span>move<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//处理碰撞后要做的事</span>Snake<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>strategies <span class="token operator">=</span> <span class="token punctuation">{</span>    move<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//这个参数决定要不要删除最后一个方块,当传了这个参数 表示吃</span>        <span class="token comment" spellcheck="true">//创建新身体(在旧蛇头位置)</span>                <span class="token keyword">var</span> newBody <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Square</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>x<span class="token operator">/</span>sw<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>y<span class="token operator">/</span>sh<span class="token punctuation">,</span><span class="token string">'snakeBody'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//更新链表关系</span>        newBody<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        newBody<span class="token punctuation">.</span>next<span class="token punctuation">.</span>last <span class="token operator">=</span> newBody<span class="token punctuation">;</span>        newBody<span class="token punctuation">.</span>last <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 把旧蛇头从原来的位置删除</span>        newBody<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建新蛇头(蛇头下一个要走的点)</span>        <span class="token keyword">var</span> newHead <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Square</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>x <span class="token operator">/</span> sw <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction<span class="token punctuation">.</span>x<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>y <span class="token operator">/</span> sh <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction<span class="token punctuation">.</span>y<span class="token punctuation">,</span><span class="token string">'snakeHead'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//更新链表关系</span>        newHead<span class="token punctuation">.</span>next <span class="token operator">=</span> newBody<span class="token punctuation">;</span>        newHead<span class="token punctuation">.</span>last <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        newBody<span class="token punctuation">.</span>last <span class="token operator">=</span> newHead<span class="token punctuation">;</span>        newHead<span class="token punctuation">.</span>viewContent<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">'rotate('</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>direction<span class="token punctuation">.</span>rotate<span class="token operator">+</span><span class="token string">'deg)'</span><span class="token punctuation">;</span>        newHead<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//蛇身上每个方块的坐标也要更新</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>x <span class="token operator">/</span> sw <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction<span class="token punctuation">.</span>x<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>y <span class="token operator">/</span> sh <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>direction<span class="token punctuation">.</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newHead<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//更新this.head</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>format<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//如果forma为false 表示需要删除</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">.</span>last<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    eat<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>strategies<span class="token punctuation">.</span>move<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">createFood</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        game<span class="token punctuation">.</span>score <span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    die<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        game<span class="token punctuation">.</span><span class="token function">over</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>snake <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Snake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建食物</span><span class="token keyword">function</span> <span class="token function">createFood</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//食物小方块的随机坐标</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> include <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//循环跳出的条件,true表示食物的坐标在蛇身上(继续循环),false表示食物坐标不在蛇身上</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>include<span class="token punctuation">)</span><span class="token punctuation">{</span>        x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>td<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>tr<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        snake<span class="token punctuation">.</span>pos<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">!=</span> value<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">!=</span> value<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 随机出来的坐标在蛇身上没找到</span>                include <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//生成食物</span>    food <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Square</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token string">'food'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    food<span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//存储生成食物坐标，用于跟蛇头要走的下一个点做对比</span>    <span class="token keyword">var</span> foodDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.food'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>foodDom<span class="token punctuation">)</span><span class="token punctuation">{</span>        foodDom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> x <span class="token operator">*</span> sw <span class="token operator">+</span>  <span class="token string">'px'</span><span class="token punctuation">;</span>        foodDom<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> y <span class="token operator">*</span> sw <span class="token operator">+</span>  <span class="token string">'px'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        food<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 创建游戏逻辑</span><span class="token keyword">function</span> <span class="token function">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Game<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>init <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    snake<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//snake.getNextPos();</span>    <span class="token function">createFood</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>onkeydown <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>which <span class="token operator">==</span> <span class="token number">37</span> <span class="token operator">&amp;&amp;</span> snake<span class="token punctuation">.</span>direction <span class="token operator">!=</span> snake<span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//用户按下左键，蛇不能是往右走</span>            snake<span class="token punctuation">.</span>direction <span class="token operator">=</span> snake<span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>left<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>which <span class="token operator">==</span> <span class="token number">38</span> <span class="token operator">&amp;&amp;</span> snake<span class="token punctuation">.</span>direction <span class="token operator">!=</span> snake<span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>down<span class="token punctuation">)</span><span class="token punctuation">{</span>            snake<span class="token punctuation">.</span>direction <span class="token operator">=</span> snake<span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>up<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>which <span class="token operator">==</span> <span class="token number">39</span> <span class="token operator">&amp;&amp;</span> snake<span class="token punctuation">.</span>direction <span class="token operator">!=</span> snake<span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">{</span>            snake<span class="token punctuation">.</span>direction <span class="token operator">=</span> snake<span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>right<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>which <span class="token operator">==</span> <span class="token number">40</span> <span class="token operator">&amp;&amp;</span> snake<span class="token punctuation">.</span>direction <span class="token operator">!=</span> snake<span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>up<span class="token punctuation">)</span><span class="token punctuation">{</span>            snake<span class="token punctuation">.</span>direction <span class="token operator">=</span> snake<span class="token punctuation">.</span>directionNum<span class="token punctuation">.</span>down<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Game<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>start <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//开始游戏</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                snake<span class="token punctuation">.</span><span class="token function">getNextPos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">}</span>Game<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>pause <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Game<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>over <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你的得分为'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>score<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//游戏回到最初时的状态</span>    <span class="token keyword">var</span> snakeWrap <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'snakeWrap'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    snakeWrap<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    snake <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Snake</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> startBtnWrap <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.startBtn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    startBtnWrap<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//开启游戏</span>game <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Game</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> startBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.startBtn button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>startBtn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    startBtn<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>    game<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//暂停</span><span class="token keyword">var</span> snakeWrap <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'snakeWrap'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> pauseBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.pauseBtn button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>snakeWrap<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    game<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pauseBtn<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'block'</span><span class="token punctuation">;</span><span class="token punctuation">}</span>pauseBtn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    game<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    pauseBtn<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
            <tag> 贪吃蛇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扫雷</title>
      <link href="/2022/09/06/%E6%89%AB%E9%9B%B7/"/>
      <url>/2022/09/06/%E6%89%AB%E9%9B%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="js写扫雷-整个文件我都传到我的github里面了-可以直接访问-x3D-gt-https-github-com-itwufeng-saolei"><a href="#js写扫雷-整个文件我都传到我的github里面了-可以直接访问-x3D-gt-https-github-com-itwufeng-saolei" class="headerlink" title="js写扫雷  整个文件我都传到我的github里面了 可以直接访问&#x3D;&gt; https://github.com/itwufeng/saolei"></a>js写扫雷  整个文件我都传到我的github里面了 可以直接访问&#x3D;&gt; <a href="https://github.com/itwufeng/saolei">https://github.com/itwufeng/saolei</a></h2><h2 id="利用-html-和-css-还有-js-来写扫雷这个小游戏"><a href="#利用-html-和-css-还有-js-来写扫雷这个小游戏" class="headerlink" title="利用 html 和 css 还有 js 来写扫雷这个小游戏"></a>利用 html 和 css 还有 js 来写扫雷这个小游戏</h2><h2 id="html-里面主要是定义一些元素"><a href="#html-里面主要是定义一些元素" class="headerlink" title="html 里面主要是定义一些元素"></a>html 里面主要是定义一些元素</h2><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>css/index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mine<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>level<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>active<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>初级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>中级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>高级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>重新开始<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gameBox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>剩余雷数: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mineNum<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/js/index.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="css-里面来设置这些元素的样式-比如格子的大小、颜色"><a href="#css-里面来设置这些元素的样式-比如格子的大小、颜色" class="headerlink" title="css 里面来设置这些元素的样式 比如格子的大小、颜色"></a>css 里面来设置这些元素的样式 比如格子的大小、颜色</h2><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token id">#mine</span></span><span class="token punctuation">{</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">50</span>px auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span><span class="token punctuation">{</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.level</span></span><span class="token punctuation">{</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.level</span> button</span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">15</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#008c8c</span><span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.level</span> button<span class="token class">.active</span></span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#00abff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.info</span></span><span class="token punctuation">{</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">table</span><span class="token punctuation">{</span>    <span class="token property">border-spacing</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#929196</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td</span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span> <span class="token hexcode">#a1a1a1</span> <span class="token hexcode">#a1a1a1</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.mine</span></span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span> <span class="token url">url(../images/雷.webp)</span><span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token selector"><span class="token class">.flag</span></span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#ccc</span> <span class="token url">url(../images/红旗.webp)</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> <span class="token number">100%</span> <span class="token number">100%</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.zero</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.one</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#0332ef</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.two</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#019f02</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.three</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff2600</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.four</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#93208f</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.five</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff7f29</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.six</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#ff3fff</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.seven</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#3fffbf</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">td<span class="token class">.eight</span></span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#22ee0f</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h2 id="重点是-js-来规定整个扫雷游戏的运行"><a href="#重点是-js-来规定整个扫雷游戏的运行" class="headerlink" title="重点是 js  来规定整个扫雷游戏的运行"></a>重点是 js  来规定整个扫雷游戏的运行</h2><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">Mine</span><span class="token punctuation">(</span>tr<span class="token punctuation">,</span>td<span class="token punctuation">,</span>mineNum<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>tr <span class="token operator">=</span> tr<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 行数</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>td <span class="token operator">=</span> td<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 列数</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>mineNum <span class="token operator">=</span> mineNum<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//雷的数量</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>squares <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 存储所有方块信息，按行列方式排放</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>tds <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 存储所有单元格对象</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>surplusMine <span class="token operator">=</span> mineNum  <span class="token comment" spellcheck="true">//剩余雷数量</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>allRight <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//右击标记的是否全是雷,用户是否游戏成功</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.gameBox'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Mine<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>randomNum <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> square <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tr <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>td<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//生成一个空数组，长度为格子总数</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> square<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        square<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    square<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token number">0.5</span><span class="token operator">-</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> square<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>mineNum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Mine<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>init <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>surplusMine <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mineNum<span class="token punctuation">;</span>    <span class="token keyword">var</span> rn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">randomNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//雷的数组</span>    <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 用来找到格子对应的索引</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tr<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>td<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//取一个方块在数组里的数据要使用行与列的形式去取，找方块周围方块要用坐标去取</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>rn<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token operator">++</span>n<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//索引在雷的数组里找到了，这个索引对应的格子是个雷</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>type<span class="token punctuation">:</span><span class="token string">'mine'</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span>j<span class="token punctuation">,</span> y<span class="token punctuation">:</span>i<span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>type<span class="token punctuation">:</span><span class="token string">'number'</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span>j<span class="token punctuation">,</span> y<span class="token punctuation">:</span>i<span class="token punctuation">,</span>value<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">upDateNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//更新雷旁边的所有数字</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createDom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//创建格子</span>    <span class="token comment" spellcheck="true">//将右键弹出的表单给删除</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>oncontextmenu <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//剩余雷数</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>mineNumDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.mineNum'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>mineNumDom<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>surplusMine<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//创建表格</span>Mine<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>createDom <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> This <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> table <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'table'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tr<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> domTr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'tr'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>tds<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>td<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> domTd <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'td'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// domTd.innerHTML = 0;</span>            domTd<span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 把格子对应的行与列存到格子身上，为下面通过这个值去数组里取到对应数据</span>            domTd<span class="token punctuation">.</span>onmousedown <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                This<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//This 指实例对象，this 指的点击的那个格子</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>tds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> domTd<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 这里是把所有创建的td添加到数组中</span>            <span class="token comment" spellcheck="true">// if(this.squares[i][j].type == 'mine'){</span>            <span class="token comment" spellcheck="true">//     domTd.className = 'mine';</span>            <span class="token comment" spellcheck="true">// }</span>            <span class="token comment" spellcheck="true">// if(this.squares[i][j].type == 'number'){</span>            <span class="token comment" spellcheck="true">//     domTd.innerHTML = this.squares[i][j].value;</span>            <span class="token comment" spellcheck="true">// }</span>            domTr<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>domTd<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        table<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>domTr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//避免多次点击创建多个</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  找某个方格周围的8个方格</span>Mine<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>getAround <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>square<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> square<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">var</span> y <span class="token operator">=</span> square<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 把找到的格子的坐标返回出去（二维）</span>    <span class="token comment" spellcheck="true">/*            x-1 y-1      x y-1      x+1 y-1            x-1 y        x y        x+1 y            x-1 y+1      x,y+1      x+1 y+1    */</span>    <span class="token comment" spellcheck="true">//通过坐标去循环到九宫格</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> x<span class="token number">-1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> y<span class="token number">-1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>                i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>    <span class="token comment" spellcheck="true">//格子超出四个角的范围</span>                j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>                 i <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>td<span class="token number">-1</span>    <span class="token operator">||</span>                  j <span class="token operator">></span> <span class="token keyword">this</span><span class="token punctuation">.</span>tr<span class="token number">-1</span>    <span class="token operator">||</span>                <span class="token punctuation">(</span>i <span class="token operator">==</span> x <span class="token operator">&amp;&amp;</span> j <span class="token operator">==</span> y<span class="token punctuation">)</span> <span class="token operator">||</span>    <span class="token comment" spellcheck="true">//自身</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">'mine'</span>  <span class="token comment" spellcheck="true">//雷</span>                            <span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>j<span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//要以行列形式返回出去</span>                    <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//更新所有数字</span>Mine<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>upDateNum <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tr<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>td<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//只更新的是雷周围的数字</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">'number'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//获取每一个雷周围的数字的格子</span>            <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAround</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> num<span class="token punctuation">.</span>length<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span> num<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> num<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>Mine<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>play <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ev<span class="token punctuation">,</span>obj<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> This <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>which <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>className <span class="token operator">!=</span> <span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//点击的是左键</span>        <span class="token keyword">var</span> curSquare <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>obj<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>obj<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> cl <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'zero'</span><span class="token punctuation">,</span><span class="token string">'one'</span><span class="token punctuation">,</span><span class="token string">'two'</span><span class="token punctuation">,</span><span class="token string">'three'</span><span class="token punctuation">,</span><span class="token string">'four'</span><span class="token punctuation">,</span><span class="token string">'five'</span><span class="token punctuation">,</span><span class="token string">'six'</span><span class="token punctuation">,</span><span class="token string">'seven'</span><span class="token punctuation">,</span><span class="token string">'eight'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>curSquare<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">'number'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//用户点到的是数字</span>            obj<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> curSquare<span class="token punctuation">.</span>value<span class="token punctuation">;</span>            obj<span class="token punctuation">.</span>className <span class="token operator">=</span> cl<span class="token punctuation">[</span>curSquare<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>curSquare<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//点到0了</span>                <span class="token comment" spellcheck="true">// 1.显示自己</span>                <span class="token comment" spellcheck="true">// 2.找四周</span>                <span class="token comment" spellcheck="true">//    1.显示四周</span>                <span class="token comment" spellcheck="true">//    2.如果值为0     递归</span>                obj<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//0为空</span>                <span class="token keyword">function</span> <span class="token function">getAllZero</span><span class="token punctuation">(</span>square<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">var</span> around <span class="token operator">=</span> This<span class="token punctuation">.</span><span class="token function">getAround</span><span class="token punctuation">(</span>square<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//找到了周围的格子，二维数组</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> around<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token keyword">var</span> x <span class="token operator">=</span> around<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">var</span> y <span class="token operator">=</span> around<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        This<span class="token punctuation">.</span>tds<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> cl<span class="token punctuation">[</span>This<span class="token punctuation">.</span>squares<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span>This<span class="token punctuation">.</span>squares<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">//如果以某个格子为中心找到的 格子值为0 则递归</span>                            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>This<span class="token punctuation">.</span>tds<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>check<span class="token punctuation">)</span><span class="token punctuation">{</span>                                <span class="token comment" spellcheck="true">//给对应的td填一个属性，这条属性用于决定这个格子有没有被找过</span>                                This<span class="token punctuation">.</span>tds<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>check <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                                <span class="token function">getAllZero</span><span class="token punctuation">(</span>This<span class="token punctuation">.</span>squares<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span>                                                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                            <span class="token comment" spellcheck="true">//如果以某个格子为中心，找到的格子不为0 那就直接显示</span>                            This<span class="token punctuation">.</span>tds<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> This<span class="token punctuation">.</span>squares<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>                        <span class="token punctuation">}</span>                    <span class="token punctuation">}</span>                                    <span class="token punctuation">}</span>                <span class="token function">getAllZero</span><span class="token punctuation">(</span>curSquare<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//用户点到的是雷</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">gameOver</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//用户点击的是右键</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>which <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//如果右击的是一个数字，那就不能点击</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>className <span class="token operator">&amp;&amp;</span> obj<span class="token punctuation">.</span>className <span class="token operator">!=</span> <span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">;</span>        <span class="token punctuation">}</span>        obj<span class="token punctuation">.</span>className <span class="token operator">=</span> obj<span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">'flag'</span> <span class="token operator">?</span> <span class="token string">''</span><span class="token punctuation">:</span><span class="token string">'flag'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>obj<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>obj<span class="token punctuation">.</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">'mine'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>allRight <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//用户标的小红旗都是雷</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>allRight <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>className <span class="token operator">==</span> <span class="token string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>mineNumDom<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token operator">--</span><span class="token keyword">this</span><span class="token punctuation">.</span>surplusMine<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>mineNumDom<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token operator">++</span><span class="token keyword">this</span><span class="token punctuation">.</span>surplusMine<span class="token punctuation">;</span>        <span class="token punctuation">}</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>surplusMine <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//剩余雷数量为0 表示用户已经标完小红旗了，这时候判断游戏结束或成功</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allRight <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'恭喜!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'游戏失败'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">gameOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//游戏失败</span>Mine<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>gameOver <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>clickTd<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*        1.显示所有雷        1.取消所有格子的点击事件        3.给点中的那个雷标上一个红色背景    */</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tr<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>td<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>squares<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">'mine'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>tds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'mine'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>tds<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>onmousedown <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>clickTd<span class="token punctuation">)</span><span class="token punctuation">{</span>        clickTd<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'#f00'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// var mine = new Mine(28,28,99);</span><span class="token comment" spellcheck="true">// mine.init();</span><span class="token comment" spellcheck="true">//上边button功能</span><span class="token keyword">var</span> btns <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.level button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> mine <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//用来存储生成的实例 </span><span class="token keyword">var</span> ln <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//用来处理当前选中的状态</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//不同级别行数列数雷数</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> btns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    btns<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        btns<span class="token punctuation">[</span>ln<span class="token punctuation">]</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'active'</span><span class="token punctuation">;</span>        mine <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Mine</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mine<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ln <span class="token operator">=</span> i<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>btns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">onclick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//初始化一下</span>btns<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    mine<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 扫雷 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬楼梯问题</title>
      <link href="/2022/09/02/%E7%88%AC%E6%A5%BC%E6%A2%AF-%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/02/%E7%88%AC%E6%A5%BC%E6%A2%AF-%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="爬楼梯问题的算法分析"><a href="#爬楼梯问题的算法分析" class="headerlink" title="爬楼梯问题的算法分析"></a>爬楼梯问题的算法分析</h2><pre class=" language-c"><code class="language-c">有个小孩正在上楼梯，楼梯有n阶台阶，小孩一次可以上<span class="token number">1</span>阶、<span class="token number">2</span>阶或<span class="token number">3</span>阶。实现一个算法，计算小孩有多少种上楼梯的方式。输入n，返回一个整数。</code></pre><p>求出n-1，n-2，n-3级台阶的总和，就是答案。</p><p>因为每次只能走1，2，3阶，所以，当一共5级台阶时，可以看成在走了4阶基础上再跨1阶 + 走了3阶基础上再跨2阶 + 走了2阶基础上再跨3阶。示例图如下：</p><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">C</span><span class="token punctuation">(</span><span class="token keyword">int</span> steps<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>steps <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>steps <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>steps <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>steps <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>steps <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token function">C</span><span class="token punctuation">(</span>steps <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">C</span><span class="token punctuation">(</span>steps <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">C</span><span class="token punctuation">(</span>steps <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token keyword">return</span> count<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> steps<span class="token punctuation">,</span> result<span class="token punctuation">;</span>    cin<span class="token operator">>></span>steps<span class="token punctuation">;</span>    result <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>steps<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>result<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 爬楼梯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多种排序算法</title>
      <link href="/2022/09/01/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/01/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1.冒泡排序"></a>1.冒泡排序</h2><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">bubblesort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//冒泡排序的时间复杂度o(n*2)</span>    <span class="token comment" spellcheck="true">//标识符</span>    <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token operator">-</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果前面的数比后面的数大，则交换</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//在一次排序中,一次都没交换过</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//重置flag，下次判断</span>            flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="2-选择排序"><a href="#2-选择排序" class="headerlink" title="2.选择排序"></a>2.选择排序</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/76339a259488423b03370e381ca5edb0.gif" alt="选择排序"></p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">selectSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> minIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">int</span> min <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//第一轮</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//说明定的最小值不是最小的</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">></span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//重置最小值</span>                    min <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    minIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//将最小值与arr[0]交换</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>minIndex <span class="token operator">!=</span>  i<span class="token punctuation">)</span><span class="token punctuation">{</span>                arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> min<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="3-插入排序"><a href="#3-插入排序" class="headerlink" title="3.插入排序"></a>3.插入排序</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/c894e22dcc48b03559e3087627e3dbb8.gif" alt="插入排序"></p><pre class=" language-java"><code class="language-java"> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">insertSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//使用逐步推导的方式</span>        <span class="token keyword">int</span> insertVal <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> insertIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//定义待插入的数</span>             insertVal <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//即arr[1]前面这个数的下标</span>             insertIndex <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//说明</span>            <span class="token comment" spellcheck="true">//insertIndex >= 0保证在给insertVal找插入位置，不越界</span>            <span class="token comment" spellcheck="true">//insertVal &lt; arr[insertIndex] 待插入的数， 还没有找到插入位置</span>            <span class="token comment" spellcheck="true">//给insertVal找到插入位置</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>insertIndex <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> insertVal <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>insertIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//就需要将arr[insertIndex]后移</span>                arr<span class="token punctuation">[</span>insertIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>insertIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>                insertIndex<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//当退出这个循环时，说明插入的位置找到</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>insertIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>                arr<span class="token punctuation">[</span>insertIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> insertVal<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token punctuation">}</span></code></pre><h2 id="4-希尔排序"><a href="#4-希尔排序" class="headerlink" title="4.希尔排序"></a>4.希尔排序</h2><p><img src="https://img-blog.csdnimg.cn/07b15ca5a0cd4d52bfe66fe0f5dba8a2.gif#pic_center" alt="在这里插入图片描述"></p><p>希尔排序的时间复杂度是：O（nlogn）～O（n2），平均时间复杂度大致是O(n√n)</p><p>笔者的理解是时间复杂度取决于你所选用的gap。因为希尔排序事先将无序的数组处理了一下，使其变得部分有序</p><p>最后再在gap &#x3D; 1的情况下进行插入排序，所以，我认为希尔排序是一个加强的插入排序</p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">shellSort2</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> gap <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> gap <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> gap <span class="token operator">/=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//对数组进行分组</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> gap<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//变相的插入排序，不过其中的间隔不再是1，而是gap</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> gap<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 优化，如果不存在arr[j - gap] > arr[j],则不执行</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> gap <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> temp <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> gap<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> gap<span class="token punctuation">]</span><span class="token punctuation">;</span>                    j <span class="token operator">-=</span> gap<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="5-快速排序"><a href="#5-快速排序" class="headerlink" title="5.快速排序"></a>5.快速排序</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/4ad3b539bee9bfe9a6acdba476ceed78.gif" alt="快速排序"></p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> l <span class="token operator">=</span> left<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//左索引</span>    <span class="token keyword">int</span> r <span class="token operator">=</span> right<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//右索引</span>    <span class="token comment" spellcheck="true">// pivot 中轴</span>    <span class="token keyword">int</span> pivot <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//while循环的目的是让比pivot小的值放在他的左边</span>    <span class="token comment" spellcheck="true">//pivot大的值放在他的右边</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>            l <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">></span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>            r <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//说明pivot的左右两边的值已经按照左边全部是小于pivot，右边大于pivot</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">>=</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//交换</span>        temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>        arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果交换玩后，发现这个arr[l] = pivot 相等 r-- ，前移一步</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">==</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>            r<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//如果交换玩后，发现这个arr[r] = pivot 相等 l++ ，前移一步</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">==</span> pivot<span class="token punctuation">)</span> <span class="token punctuation">{</span>            l<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//如果l  == r,必须l++ ， r --，否则栈溢出</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>        l <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>        r <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//向左递归</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//向右递归</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">></span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> l<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="6-基数排序"><a href="#6-基数排序" class="headerlink" title="6.基数排序"></a>6.基数排序</h2><p><img src="https://upload-images.jianshu.io/upload_images/1940317-0fbcf53f27e12a87.gif?imageMogr2/auto-orient/strip%7CimageView2/2/w/959/format/webp" alt="img"></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//基数排序,又称桶排序</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">radixSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//得到每个数组最大的数</span>    <span class="token keyword">int</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//假设第一个数据是最大的数</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            max <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//得到最大的数字几位数</span>    <span class="token keyword">int</span> maxLength <span class="token operator">=</span> <span class="token punctuation">(</span>max <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//第一轮（针对每个元素的个位数进行处理）</span>    <span class="token comment" spellcheck="true">//定义一个二维数组，表示10个桶</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bucket <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//为了记录每个桶中实际存放了多少个数据，我们定义一个一维数组来记录各个桶每次放入的数据个数</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bucketElementCounts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//这里使用循环处理maxLength</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> maxLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span> n <span class="token operator">*=</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//取出每个元素的各位</span>            <span class="token keyword">int</span> digitOfElement <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">/</span> n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//放入到对应的桶中</span>            bucket<span class="token punctuation">[</span>digitOfElement<span class="token punctuation">]</span><span class="token punctuation">[</span>bucketElementCounts<span class="token punctuation">[</span>digitOfElement<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            bucketElementCounts<span class="token punctuation">[</span>digitOfElement<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//按照这个桶的顺序取数据</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果桶中有数据，我们才放回原数组</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>bucketElementCounts<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//循环第k个桶，即第k个以为数组</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> l <span class="token operator">&lt;</span> bucketElementCounts<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//取出元素放入到array中</span>                    arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> bucket<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>                    index<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//第一轮后，需要bucketElementCounts置0</span>            bucketElementCounts<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h2 id="7-归并排序"><a href="#7-归并排序" class="headerlink" title="7.归并排序"></a>7.归并排序</h2><p><img src="https://img-blog.csdn.net/20180809102227861?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNDcyMzI4/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="这里写图片描述"></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * * @param arr   需要排序的原始数组 * @param left   左边有序序列的初始索引 * @param mid     中间索引 * @param right   右边的索引 * @param temp     中转数组 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> mid<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> left<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//初始化i，左边有序序列的初始索引</span>    <span class="token keyword">int</span> j <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//初始化j，右边有序序列的初始索引</span>    <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//指向temp数组的当前索引</span>    <span class="token comment" spellcheck="true">//(-)</span>    <span class="token comment" spellcheck="true">//先把左右两边的数据按规则填充到temp中</span>    <span class="token comment" spellcheck="true">//知道左右两边的有序序列，有一边处理完毕</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            temp<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            t<span class="token operator">++</span><span class="token punctuation">;</span>            i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            temp<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            t<span class="token operator">++</span><span class="token punctuation">;</span>            j<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//(二)</span>    <span class="token comment" spellcheck="true">// 把有剩余数据的一方的数据一次全部填充到temp去</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">//说明左边的序列还有剩余元素</span>        temp<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        t<span class="token operator">++</span><span class="token punctuation">;</span>        i<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">//说明右边的序列还有剩余元素</span>        temp<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        t<span class="token operator">++</span><span class="token punctuation">;</span>        j<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//(三)</span>    <span class="token comment" spellcheck="true">//将temp数组的元素拷贝到Arrays</span>    t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> tempLeft <span class="token operator">=</span> left<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>tempLeft <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>        arr<span class="token punctuation">[</span>tempLeft<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>        t<span class="token operator">++</span><span class="token punctuation">;</span>        tempLeft<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序算法 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python-爬取小说</title>
      <link href="/2022/09/01/python-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4/"/>
      <url>/2022/09/01/python-%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="配置python写爬虫的环境"><a href="#配置python写爬虫的环境" class="headerlink" title="配置python写爬虫的环境"></a>配置python写爬虫的环境</h1><p>先装 requests 库 和 lxml 库<br>直接终端里面:</p><pre class=" language-python"><code class="language-python">pip3 install requestspip3 install lxml</code></pre><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">from</span> genericpath <span class="token keyword">import</span> exists<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">import</span> osheaders <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Safari/605.1.15'</span><span class="token punctuation">}</span>url <span class="token operator">=</span><span class="token string">'https://www.yodu.org/book/18923/'</span>ni_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>texttree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>ni_text<span class="token punctuation">)</span>ni_list <span class="token operator">=</span> tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="chapterList"]'</span><span class="token punctuation">)</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">'./xianjian'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">'./xianjian'</span><span class="token punctuation">)</span><span class="token keyword">for</span> a <span class="token keyword">in</span> ni_list<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        new_url <span class="token operator">=</span> <span class="token string">'https://www.yodu.org'</span><span class="token operator">+</span>a<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./li/a/@href'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span>        name <span class="token operator">=</span> a<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'./li//text()'</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'.txt'</span>        new_text <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>new_url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>text        new_tree <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>new_text<span class="token punctuation">)</span>        honst_text <span class="token operator">=</span> new_tree<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*[@id="TextContent"]//text()'</span><span class="token punctuation">)</span>        xian_path <span class="token operator">=</span> <span class="token string">'xianjian/'</span><span class="token operator">+</span>name        <span class="token keyword">with</span> open<span class="token punctuation">(</span>xian_path<span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span>            fp<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>honst_text<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span><span class="token string">'下载成功!!!'</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间复杂度最小的 组合数求法</title>
      <link href="/2022/09/01/%E7%BB%84%E5%90%88%E6%95%B0-%E7%AE%97%E6%B3%95/"/>
      <url>/2022/09/01/%E7%BB%84%E5%90%88%E6%95%B0-%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="最快且最快范围求组合数"><a href="#最快且最快范围求组合数" class="headerlink" title="最快且最快范围求组合数"></a>最快且最快范围求组合数</h2><pre class=" language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span>using namespace std<span class="token punctuation">;</span><span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> ll<span class="token punctuation">;</span>ll res<span class="token punctuation">[</span><span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">67</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>ll <span class="token function">C</span><span class="token punctuation">(</span>ll n<span class="token punctuation">,</span>ll m<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">==</span><span class="token number">0</span> <span class="token operator">||</span> m<span class="token operator">==</span>n<span class="token punctuation">)</span>         <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> res<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">C</span><span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">,</span>m<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//¸³Öµ¸øres[n][m]²¢·µ»Ø</span>    <span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    ll a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> result<span class="token punctuation">;</span>    cin<span class="token operator">>></span>a<span class="token operator">>></span>b<span class="token punctuation">;</span>    result <span class="token operator">=</span> <span class="token function">C</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    cout<span class="token operator">&lt;&lt;</span>result<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 组合数 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
